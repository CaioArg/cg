#ifndef SKYBOX_HPP_
#define SKYBOX_HPP_

#include "abcgOpenGL.hpp"

#include "camera.hpp"

class Skybox {
public:
  Skybox(Camera& camera) : m_camera(camera) {}
  void create(GLuint program);
  void paint();
  void destroy();

private:
  Camera& m_camera;

  GLuint m_program{};
  GLuint m_cubeTexture{};
  GLuint m_VBO{};
  GLuint m_VAO{};

  std::array<glm::vec3, 36> m_vertices{{
    // Front
    {-10000, -10000, +10000}, {+10000, -10000, +10000}, {+10000, +10000, +10000},
    {-10000, -10000, +10000}, {+10000, +10000, +10000}, {-10000, +10000, +10000},
    // Back
    {+10000, -10000, -10000}, {-10000, -10000, -10000}, {-10000, +10000, -10000},
    {+10000, -10000, -10000}, {-10000, +10000, -10000}, {+10000, +10000, -10000},
    // Right
    {+10000, -10000, -10000}, {+10000, +10000, -10000}, {+10000, +10000, +10000},
    {+10000, -10000, -10000}, {+10000, +10000, +10000}, {+10000, -10000, +10000},
    // Left
    {-10000, -10000, +10000}, {-10000, +10000, +10000}, {-10000, +10000, -10000},
    {-10000, -10000, +10000}, {-10000, +10000, -10000}, {-10000, -10000, -10000},
    // Top
    {-10000, +10000, +10000}, {+10000, +10000, +10000}, {+10000, +10000, -10000},
    {-10000, +10000, +10000}, {+10000, +10000, -10000}, {-10000, +10000, -10000},
    // Bottom
    {-10000, -10000, -10000}, {+10000, -10000, -10000}, {+10000, -10000, +10000},
    {-10000, -10000, -10000}, {+10000, -10000, +10000}, {-10000, -10000, +10000}
  }};
};

#endif
